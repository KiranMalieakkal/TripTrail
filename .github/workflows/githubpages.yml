# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
      VITE_APP_URI: ${{ vars.VITE_APP_URI }}
      VITE_BASE_URL: ${{ vars.VITE_BASE_URL }}
      VITE_AUTH0_CLIENT_ID: ${{ secrets.VITE_AUTH0_CLIENT_ID }}
      VITE_AUTH0_DOMAIN: ${{ secrets.VITE_AUTH0_DOMAIN }}
      VITE_REDIRECT_URI: ${{ vars.VITE_REDIRECT_URI }}
      VITE_AUDIENCE: ${{ vars.VITE_AUDIENCE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: npm install, build, test
        run: |
          npm run postinstall
          npm run postbuild
          cd frontend
          ls
          cd dist
          ls
          cd assets 
          ls

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: frontend/dist/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
